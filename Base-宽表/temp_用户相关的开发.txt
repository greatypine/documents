1. 写一个用户与idcard的对应关系表 中间表
1）社员
2）线上员工
3）养老餐

2. 国安社区员工tag：
	线上员工 t_sync_record，

	select tc.id as customer_id
    from gemini.t_customer tc 
	left join 
	(
	    select distinct phone from daqweb.t_sync_record where phone is not null and phone != ''
	) t_sync on (tc.mobilephone = t_sync.phone)

	国安侠 t_human_resource

	select tc.id as customer_id
    from gemini.t_customer tc 
	left join 
	(
	    select distinct phone from daqweb.t_humanresources
	) th on (th.phone = tc.mobilephone)

3. 近360天的消费次数tag

4. 差评tag （差评次数）


5. 400消费tag  （消费次数）
select customer_id from gemini.t_order where order_source = 'callcenter' group by customer_id

6. 无效用户tag（1,2）----单店单日注册次数（7位电话号码）

7. 过账支付
select customer_id from gemini.t_order_receipts where pay_platform = 'posting' group by customer_id;

8. 用户单日最大单数，
	select tor.customer_id,count(1) as count from gemini.t_order tor inner join gemini.t_eshop te on (tor.eshop_id = te.id) where sign_time is not null
	and to_date(tor.create_time) = from_unixtime(unix_timestamp(date_sub(now(), 1)),"yyyy-MM-dd")
    group by tor.customer_id having count(1) >10
   最大单日累计金额
   	select tor.customer_id,sum(tor.trading_price) from gemini.t_order tor inner join gemini.t_eshop te on (tor.eshop_id = te.id) where sign_time is not null
	and to_date(tor.create_time) = from_unixtime(unix_timestamp(date_sub(now(), 1)),"yyyy-MM-dd")
	group by tor.customer_id having sum(tor.trading_price) >10000

9.代客下单用户
select customer_id from gemini.t_order where order_source = 'store' group by customer_id;


10.
select
			t.customer_id,
			t.mac_address,
			row_number() over(partition by t.customer_id order by count(1) desc) as rank
		from gabdp_log.t_log as t
		where t.customer_id is not null and t.customer_id != '' and t.customer_id != 'null'
			and t.mac_address is not null and t.mac_address != '' and t.mac_address != 'null' and length(t.mac_address)=17
			group by t.customer_id, t.mac_address



11. select
			t.customer_id,
			max(t.request_date) as request_date
		from gabdp_log.t_log as t
		where t.customer_id is not null and t.customer_id != '' and t.customer_id != 'null'
			and t.request_date is not null and t.request_date != '' and t.request_date != 'null'
			group by t.customer_id
